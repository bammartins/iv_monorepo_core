networks:
  app_network:
    driver: bridge
volumes:
  iv_onboarding_db:
  iv_vehicle_register_db:

services:
  iv_onboarding_db:
    image: mysql
    restart: always
    container_name: iv_onboarding_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: iv_onboarding_db
    volumes:
      - iv_onboarding_db:/var/lib/mysql
    ports:
      - "3031:3306"
    networks:
      - app_network

  iv_vehicle_register_db:
    image: mysql
    restart: always
    container_name: iv_vehicle_register_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: iv_vehicle_register_db
    volumes:
      - iv_vehicle_register_db:/var/lib/mysql
    ports:
      - "3032:3306"
    networks:
      - app_network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - app_network

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - app_network

  iv_onboarding:
    build:
      context: ./iv_onboarding
      dockerfile: Dockerfile

    environment:
      DATABASE_URL: mysql://root:root@db:3031/database
      DB_HOST: db
      DB_PORT: 3031
      DB_USER: root
      DB_PASSWORD: root
    ports:
      - "8090:3001"
    volumes:
      - ./iv_onboarding:/app
    networks:
      - app_network
    depends_on: [kafka, iv_onboarding_db]

  iv_vehicle_register:
    build:
      context: ./iv_vehicle_register
      dockerfile: Dockerfile

    environment:
      DATABASE_URL: mysql://root:root@db:3032/database
      DB_HOST: db
      DB_PORT: 3032
      DB_USER: root
      DB_PASSWORD: root
    ports:
      - "8091:3002"
    volumes:
      - ./iv_vehicle_register:/app
    depends_on: [kafka, iv_vehicle_register_db]



